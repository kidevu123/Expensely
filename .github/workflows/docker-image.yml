name: Docker Image CI

on:
  push:
    branches: [main]        # change to [clean-main] if needed
    tags: ['v*']            # runs on version tags too
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set version/tag names
        id: vars
        run: |
          REF="${GITHUB_REF##*/}"
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            VERSION="$REF"              # e.g. v0.1.7
            WEB_TAGS="--tag ${{ secrets.DOCKERHUB_USERNAME }}/expensely-web:$VERSION --tag ${{ secrets.DOCKERHUB_USERNAME }}/expensely-web:latest"
            API_TAGS="--tag ${{ secrets.DOCKERHUB_USERNAME }}/expensely-api:latest"
          else
            SHA_SHORT="$(git rev-parse --short HEAD)"
            VERSION="$SHA_SHORT"
            WEB_TAGS="--tag ${{ secrets.DOCKERHUB_USERNAME }}/expensely-web:edge"
            API_TAGS="--tag ${{ secrets.DOCKERHUB_USERNAME }}/expensely-api:edge"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "web_tags=$WEB_TAGS" >> $GITHUB_OUTPUT
          echo "api_tags=$API_TAGS" >> $GITHUB_OUTPUT

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build+push API (amd64)
        run: |
          docker buildx build \
            --platform linux/amd64 \
            ${{ steps.vars.outputs.api_tags }} \
            -f api/Dockerfile api \
            --push

      - name: Build+push Web (amd64, inject version)
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --build-arg APP_VERSION=${{ steps.vars.outputs.version }} \
            ${{ steps.vars.outputs.web_tags }} \
            -f web/Dockerfile web \
            --push
